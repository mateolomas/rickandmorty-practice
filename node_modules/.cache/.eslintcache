[{"/Users/sebastian/rickandmorty-practice/src/index.tsx":"1","/Users/sebastian/rickandmorty-practice/src/App.tsx":"2","/Users/sebastian/rickandmorty-practice/src/components/Header.tsx":"3","/Users/sebastian/rickandmorty-practice/src/hooks/useFetchData.tsx":"4","/Users/sebastian/rickandmorty-practice/src/components/CharacterCard.tsx":"5","/Users/sebastian/rickandmorty-practice/src/components/Modal.tsx":"6","/Users/sebastian/rickandmorty-practice/src/components/Search.tsx":"7","/Users/sebastian/rickandmorty-practice/src/components/Cards.tsx":"8"},{"size":359,"mtime":1645564273649,"results":"9","hashOfConfig":"10"},{"size":306,"mtime":1645799689029,"results":"11","hashOfConfig":"10"},{"size":640,"mtime":1645731381107,"results":"12","hashOfConfig":"10"},{"size":1685,"mtime":1645825266456,"results":"13","hashOfConfig":"10"},{"size":1538,"mtime":1645823164559,"results":"14","hashOfConfig":"10"},{"size":1998,"mtime":1645823191835,"results":"15","hashOfConfig":"10"},{"size":162,"mtime":1645643071241,"results":"16","hashOfConfig":"10"},{"size":1183,"mtime":1645825231897,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cze9vk",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sebastian/rickandmorty-practice/src/index.tsx",[],[],"/Users/sebastian/rickandmorty-practice/src/App.tsx",["43"],[],"/Users/sebastian/rickandmorty-practice/src/components/Header.tsx",[],[],"/Users/sebastian/rickandmorty-practice/src/hooks/useFetchData.tsx",["44","45"],[],"import { Characters, resultEpisode, AllInfo, Result } from '../interfaces/types';\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResultLocation } from \"../interfaces/types\";\n\nfunction useFetchData(name: string)  {\n  const [dataList, setDataList] = useState<AllInfo[]>();\n\n  const [loading, setLoading] = useState<Boolean>(false);\n  const [error, setError] = useState<String>(\"\");\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const url = name\n        ? `https://rickandmortyapi.com/api/character/?name=${name}`\n        : `https://rickandmortyapi.com/api/character/`;\n\n      const responseData = await axios.get<Characters>(url);\n      const characters: Characters = responseData.data;\n      \n\n      const LocationAux = characters.results.map(async (character) => {\n        const urlLocation = character.location.url;\n        const responseDataLocation = await axios.get<ResultLocation>(urlLocation);\n        const location: ResultLocation = responseDataLocation.data;\n\n        const urlEpisode = character.episode[0];\n        const responseEpisode = await axios.get<resultEpisode>(urlEpisode);\n        const episode: resultEpisode = responseEpisode.data;\n        \n        return {character, location, episode};\n\n      })\n      const data: AllInfo[] = await Promise.all(LocationAux);\n      console.log(data, \"data\");\n      setLoading(false);\n      setDataList(data);\n      \n      \n\n    } catch (error) {\n      setError(\"Ha ocurrido un error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  useEffect(() => {\n    getData();\n  }, [name]);\n\n  return {dataList  , loading, error };\n  \n}\n\nexport default useFetchData;\n","/Users/sebastian/rickandmorty-practice/src/components/CharacterCard.tsx",[],[],"/Users/sebastian/rickandmorty-practice/src/components/Modal.tsx",[],[],"/Users/sebastian/rickandmorty-practice/src/components/Search.tsx",[],[],"/Users/sebastian/rickandmorty-practice/src/components/Cards.tsx",[],[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":1,"column":46,"nodeType":"48","messageId":"49","endLine":1,"endColumn":52},{"ruleId":"51","severity":1,"message":"52","line":52,"column":6,"nodeType":"53","endLine":52,"endColumn":12,"suggestions":"54"},"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Result' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["55"],{"desc":"56","fix":"57"},"Update the dependencies array to be: [getData, name]",{"range":"58","text":"59"},[1600,1606],"[getData, name]"]